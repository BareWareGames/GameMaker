<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Intialize menu
menu_selection = 0;
menu_items = 0;

key_delay = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Key delay
key_delay = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Limit key press
if (key_delay) {// If true
    key_delay = !(!key_up &amp;&amp; !key_down &amp;&amp; !key_enter); // If any are clicked stay true else false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update COntrols
scr_key_inputs(-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls menu
if (!key_delay) { // If false
    menu_selection += 1 * (key_down - key_up);
    
    menu_selection = min(max (0, menu_selection), menu_items - 1);
    
    key_delay = true;

    if(key_enter) {
        switch(menu_selection) {
            case 0:
                room_goto(rm_levelviewer);
                break;
            case 1:
                room_goto(rm_testing);
                break;
            case 2:
                //room_goto(rm_options);
                break;
            case 3:
                game_end();
                break;
            case 4:
                url_open_ext(URL_COMPANY, '_blank');
                break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///scr_state_menu_draw()
draw_set_font(font_main);

draw_set_halign(fa_center);
draw_text_transformed(room_width/2, 100, "Post-Mortem", 2, 2, 0);
draw_text_transformed(room_width/2, 160, "developed by", 0.6, 0.6, 0);
draw_text_transformed(room_width/2, 180, "BAREWARE GAMES", 1.4, 1.4, 0);

var colour = c_white;
var alpha = 0.5;

menu_items = 5;

if(menu_selection == 0) { colour = c_red; alpha = 1; } else { colour = c_white; alpha = 0.5; }
draw_text_transformed_colour(room_width/2, room_height*(16/24), "Play", 1, 1, 0, colour, colour, colour, colour, alpha);
if(menu_selection == 1) { colour = c_red; alpha = 1; } else { colour = c_white; alpha = 0.5; }
draw_text_transformed_colour(room_width/2, room_height*(17/24), "Test Zone", 1, 1, 0, colour, colour, colour, colour, alpha);
if(menu_selection == 2) { colour = c_red; alpha = 1; } else { colour = c_white; alpha = 0.5; }
draw_text_transformed_colour(room_width/2, room_height*(18/24), "Options", 1, 1, 0, colour, colour, colour, colour, alpha);
if(menu_selection == 3) { colour = c_red; alpha = 1; } else { colour = c_white; alpha = 0.5; }
draw_text_transformed_colour(room_width/2, room_height*(19/24), "Quit", 1, 1, 0, colour, colour, colour, colour, alpha);
if(menu_selection == 4) { colour = c_red; alpha = 1; } else { colour = c_white; alpha = 0.5; }
draw_text_transformed_colour(room_width/2, room_height*(23/24), "More...", 0.4, 0.4, 0, colour, colour, colour, colour, alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
